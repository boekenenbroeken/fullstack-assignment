name: Fullstack CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: f1
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      REDIS_URL: ${{ secrets.REDIS_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install backend dependencies
        run: pnpm install
        working-directory: backend

      - name: Generate Prisma client
        run: pnpm prisma generate
        working-directory: backend

      - name: Apply Prisma migrations
        run: pnpm prisma migrate deploy
        working-directory: backend

      - name: Seed database
        run: pnpm run seed
        working-directory: backend

      - name: Lint backend
        run: pnpm lint
        working-directory: backend

      - name: Test backend
        run: pnpm test
        working-directory: backend

      - name: Build backend
        run: pnpm build
        working-directory: backend

  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install frontend dependencies
        run: pnpm install
        working-directory: frontend

      - name: Lint frontend
        run: pnpm lint
        working-directory: frontend

      - name: Type check frontend
        run: pnpm run build
        working-directory: frontend

      - name: Test frontend
        run: pnpm test
        working-directory: frontend

      - name: Build frontend (final build)
        run: pnpm run build
        working-directory: frontend
